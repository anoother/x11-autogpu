#!/bin/bash


#for alt in $(ls /etc/alternatives | grep -v .gz); do update-alternatives --query $alt 2>/dev/null | grep $NV >/dev/null && update-alternatives --query $alt; done | less

NV=nvidia
VERSION=$(ls -d /usr/share/${NV}-* | sort -n | tail -n1 | cut -d'-' -f2)

lspci | grep 'VGA compatible controller'| grep -q -i $NV
DONT_HAVE_NV=$?


for alt in $(ls /etc/alternatives | grep -v .gz); do
    to_parse="$(update-alternatives --query $alt 2>/dev/null)"
    if echo "$to_parse" | grep -q $NV; then # If an nvidia library is presented as an alternative
        name=$(echo $to_parse | grep 'Name: ' | cut -d' ' -f2)
        if (( DONT_HAVE_NV )); then
            echo "$to_parse" | grep 'Value: ' | grep -q -v $NV && continue # Not set to nvidia
            for potential in "$(echo "$to_parse" | grep 'Alternative: ' | grep -v -e $NV)"; do # We will set to highest-prio non-nvidia alternative
                update-alternatives --set "$name" "$(echo $potential | cut -d' ' -f2)"
                continue
            done
            # Enable Glamor:
            update-alternatives --force --remove glamor_conf /usr/share/${NV}-${VERSION}/glamor.conf
        else
            # Disable Glamor:
            update-alternatives --force --install /usr/share/X11/xorg.conf.d/glamoregl.conf glamor_conf /usr/share/nvidia-375/glamor.conf 600 || echo -n
            # If any alternative is not set to nvidia, set its config to auto:
            for potential in "$(echo "$to_parse" | grep 'Value: ' | grep -q -v $NV)"; do
                echo 0 | update-alternatives --config "$name"
            done
        fi
    fi
    LDCONFIG_NOTRIGGER=y ldconfig
done 
